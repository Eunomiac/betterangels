import{gsap as t,Dragger as e,InertiaPlugin as s,MotionPathPlugin as i,GSDevTools as n,U as a,XElem as o,XCircle as r,XItem as h,XDie as c,XSnap as d}from"./bundler.mjs";const l={t:[0,0],i:[375,414],o:[100,100],h:[1370,100],left:[100,414],right:[1370,414],l:[100,729],g:[1370,729]};export default class{constructor(t){[this.p]=$('<div id="dbContainer" class="db x-container" />').appendTo(".vtt.game"),this.$(!0)}get u(){return this.p}D(t){this.m=t}v(t){this.P&&this.P.A.S("db-flagged"),t.A.I("db-flagged"),this.P=t}k(){this.C.forEach(this.F),this.O()}R(){this.C.forEach(this.j),this.B()}M(t={i:5}){window.CIRCLES=window.CIRCLES??[];const e=a.U(Object.values(r.L).slice(-3));for(const[s,i]of Object.entries(t)){const t=new r(...l[s],100,{type:e.next().value});t.N(i),window.CIRCLES.push(t)}}get C(){return this.W=this.W??[]}H(e){return{[`${e.id}Straightener`](){t.set(`#${e.id} .db.angle-marker`,{rotation:-1*e.rotation})}}[`${e.id}Straightener`]}q(t){this.C.includes(t)||(this.C.push(t),this.F(t))}G(t){this.W=this.C.filter((e=>e.name!==t.name)),this.j(t)}F(e,s=4,n=!1){[e.J]=$(`\n    <svg height="100%" width="100%">\n      <path id="db-${e.id}" class="db snap-circle" fill="none" stroke="none" d="${a.K(1.25*e.V,{x:e.V,y:e.V})}"></path>\n    </svg>\n    `).appendTo(this.u),t.set(e.J,{X:-50,Y:-50,x:e.x,y:e.y}),e.Z=i._(`#db-${e.id}`),i.tt(e.Z);this.j(e),[...Array(s)].map(((e,i)=>t.st.et(0,s,-180,180,i))).forEach((s=>(s=>{e.it=e.it??{};const n=Math.round(100*t.st.normalize(-180,180,s))/100,{x:a,y:o,angle:r}=i.nt(e.Z,n,!0);[e.it[s]]=$(`<div class="db angle-marker">${parseInt(r)}<br>${n}</div>`).appendTo(e.ot),t.set(e.it[s],{x:a,y:o,X:-50,Y:-50,rotation:-1*e.rotation})})(s))),e.rt=this.H(e),t.ht.add(e.rt)}j(e){t.ht.remove(e.rt),$(`#${e.id} .angle-marker`).remove()}ct(t,e=0,s=null){(s=s??(this.dt=this.dt??o.lt.find((t=>t instanceof r))))&&([s.gt[t],s.gt[e]]=[s.gt[e],s.gt[t]],s.bt(10,"expo.out"))}get yt(){return this.$t=this.$t??[]}ft(t){const e=this;return{[`${t.id}DieUpdater`](){t.gt.forEach((t=>{if(t instanceof c){const s=['<table class="db db-display">'];e.yt.forEach((e=>{const i=["<tr>"];e.forEach((s=>{let n=t[s]??n;"number"==typeof n&&(n=Math.abs(n)<1?`${n<0?"-":""}.${a.xt(100*n)}`:1===Math.abs(n)?(n<0?"-":"")+"1.0":a.xt(n)),i.push(`<td class="db db-data" colspan="${3-e.length}">${n}</td>`)})),i.push("</tr>"),s.push(i.join(""))})),s.push("</table>"),t.ut=s.join("")}}))}}[`${t.id}DieUpdater`]}$(t=!0){o.lt.filter((t=>t instanceof c)).forEach((e=>e.text=t?e.slot:""))}wt(t){this.yt.push([t].flat())}Dt(e){e.gt.forEach((t=>{t instanceof c&&t.A.I("db-display")})),e.vt=this.ft(e),t.ht.add(e.vt)}Pt(e){e.gt.forEach((t=>{t instanceof c&&(t.A.S("db-display"),t.A.S("db-flagged"),t.text=t.slot)})),t.ht.remove(e.vt)}ping({x:e,y:s},{V:n=20,color:a="yellow",St:o}={}){const[r]=$(`<svg class="db" height="100%" width="100%">\n      <circle cx="${n}" cy="${n}" r="${n}" fill="${a}" stroke="none" />\n    </svg>`).appendTo(this.u).children().last();o&&({x:e,y:s}=i.At(o,this.u.ot,{x:e,y:s})),t.set(r,{X:-50,Y:-50,transformOrigin:"50% 50%",x:e,y:s}),t.to(r,{opacity:1,scale:1,It:{opacity:.25,scale:5},duration:1,kt:"bounce",Ct(){t.to(r,{opacity:.5,scale:.25,duration:10,delay:5,kt:"sine"})}})}Ft(){r.Ot.forEach(((t,e)=>{this.ping(e,{color:"basic"===t.type?"lime":t.type})}))}Rt(t){const e=[0,.1,.2,.3,.4,.5,.6,.7,.8,.9,1].map((e=>{const{x:s,y:n,angle:a}=i.nt(t.jt.path,e,!0),r=t.Bt(o.Mt,{x:s,y:n});return{Ut:{x:parseInt(s),y:parseInt(n)},Et:{x:parseInt(r.x),y:parseInt(r.y)},angle:parseInt(a),Lt:e}}));console.log(e)}}